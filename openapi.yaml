openapi: 3.1.0
info:
  title: The Speakeasy Bar
  version: 1.0.0
  summary: A bar that serves drinks
  description: A secret underground bar that serves drinks to those in the know.
  contact:
    name: Speakeasy Support
    url: https://support.speakeasy.bar
    email: support@speakeasy.bar
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://speakeasy.bar/terms
externalDocs:
  url: https://docs.speakeasy.bar
  description: The Speakeasy Bar Documentation
servers:
  - url: https://speakeasy.bar
    description: The production server
  - url: https://staging.speakeasy.bar
    description: The staging server
  - url: https://{organization}.{environment}.speakeasy.bar
    description: A per-organization and per-environment API
    variables:
      organization:
        description: The organization name. Defaults to a generic organization.
        default: api
      environment:
        description: The environment name. Defaults to the production environment.
        default: prod
        enum:
          - prod
          - staging
          - dev
security:
  - apiKey: []
paths:
  /authenticate:
    post:
      operationId: authenticate
      summary: Authenticate with the API by providing a username and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: The api key to use for authenticated endpoints
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Invalid credentials provided
  /drinks:
    get:
      operationId: listDrinks
      summary: Get a list of drinks, if authenticated this will include stock levels and product codes otherwise it will only include public information
      security:
        - {}
      responses:
        "200":
          description: A list of drinks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Drink"
  /drink:
    servers:
      - url: https://api.speakeasy.bar
        description: The production server
    get:
      operationId: getDrink
      summary: Get a drink by name
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A drink
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drink"
components:
  schemas:
    Drink:
      type: object
      properties:
        name:
          description: The name of the drink
          type: string
          examples:
            - name: Old Fashioned
            - name: Manhattan
            - name: Negroni
        price:
          description: The price of one unit of the drink in US cents
          type: number
          examples:
            - price: 1000 # $10.00
            - price: 1200 # $12.00
            - price: 1500 # $15.00
        stock:
          description: The number of units of the drink in stock, only available when authenticated
          type: integer
          examples:
            - stock: 10
            - stock: 5
            - stock: 0
        productCode:
          description: The product code of the drink, only available when authenticated
          type: string
          examples:
            - productCode: "AC-A2DF3"
            - productCode: "NAC-3F2D1"
            - productCode: "APM-1F2D3"
      required:
        - name
        - price
  securitySchemes:
    apiKey:
      type: apiKey
      name: Authorization
      in: header
